{"version":3,"sources":["webpack:///./src/pages/DashboardSondes.vue?d3fd","webpack:///src/pages/DashboardSondes.vue","webpack:///./src/pages/DashboardSondes.vue?3790","webpack:///./src/pages/DashboardSondes.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","slot","class","isRTL","_v","_s","$t","activeData","_l","index","key","text","on","changeData","option","active","bigLineChart","activeIndex","domProps","$event","initBigChart","ref","chartData","gradientColors","gradientStops","extraOptions","staticRenderFns","components","LineChart","BarChart","TaskList","UserTable","data","sonde","activeSonde","dataPossible","windMode","allData","datasets","labels","categories","greenLineChart","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","computed","enableRTL","bigLineChartCategories","methods","event","console","date","urls","Promise","then","datas","dataValue","count","mounted","beforeDestroy","component"],"mappings":"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","file":"js/dashboard.ae847e2c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12\"},[_c('card',{staticStyle:{\"height\":\"230%\"},attrs:{\"type\":\"chart\"}},[_c('template',{slot:\"header\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-6\",class:_vm.isRTL ? 'text-right' : 'text-left'},[_c('h5',{staticClass:\"card-category\"},[_vm._v(_vm._s(_vm.$t('dashboard.data')))]),_c('h2',{staticClass:\"card-title\"},[_vm._v(_vm._s(_vm.activeData))]),_c('base-dropdown',{class:{'float-left': _vm.isRTL},attrs:{\"menu-on-right\":\"\",\"tag\":\"div\",\"title-classes\":\"btn btn-link btn-icon\",\"aria-label\":\"Settings menu\"}},[_c('i',{staticClass:\"tim-icons icon-settings-gear-63\",attrs:{\"slot\":\"title\"},slot:\"title\"}),_vm._l((_vm.dataPossible),function(index){return _c('div',{key:index.text},[_c('a',{staticClass:\"dropdown-item\",attrs:{\"href\":\"#dashboardSondes\"},on:{\"click\":_vm.changeData}},[_vm._v(_vm._s(index.text))])])})],2)],1),_c('div',{staticClass:\"col-sm-6\"},[_c('div',{staticClass:\"btn-group btn-group-toggle\",class:_vm.isRTL ? 'float-left' : 'float-right',attrs:{\"data-toggle\":\"buttons\"}},_vm._l((_vm.bigLineChartCategories),function(option,index){return _c('label',{key:option,staticClass:\"btn btn-sm btn-primary btn-simple\",class:{active: _vm.bigLineChart.activeIndex === index},attrs:{\"id\":index}},[_c('input',{attrs:{\"type\":\"radio\",\"name\":\"options\",\"autocomplete\":\"off\"},domProps:{\"checked\":_vm.bigLineChart.activeIndex === index},on:{\"click\":function($event){return _vm.initBigChart(index)}}}),_vm._v(\" \"+_vm._s(option)+\" \")])}),0)])])]),_c('div',{staticClass:\"chart-area\"},[_c('line-chart',{ref:\"bigChart\",staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"big-line-chart\",\"chart-data\":_vm.bigLineChart.chartData,\"gradient-colors\":_vm.bigLineChart.gradientColors,\"gradient-stops\":_vm.bigLineChart.gradientStops,\"extra-options\":_vm.bigLineChart.extraOptions}})],1)],2)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\" style=\"height:230%\" >\n          <template slot=\"header\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">{{$t('dashboard.data')}}</h5>\n                <h2 class=\"card-title\">{{activeData}}</h2>\n                <base-dropdown menu-on-right=\"\"\n                                tag=\"div\"\n                                title-classes=\"btn btn-link btn-icon\"\n                                aria-label=\"Settings menu\"\n                                :class=\"{'float-left': isRTL}\">\n                    <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\n                    <div v-for=\"index in dataPossible\" :key=\"index.text\">\n                        <a class=\"dropdown-item\" @click=\"changeData\" href=\"#dashboardSondes\">{{index.text}}</a>\n                    </div>\n                </base-dropdown>\n              </div>\n             \n              <div class=\"col-sm-6\">\n                <div class=\"btn-group btn-group-toggle\"\n                     :class=\"isRTL ? 'float-left' : 'float-right'\"\n                     data-toggle=\"buttons\">\n                  <label v-for=\"(option, index) in bigLineChartCategories\"\n                         :key=\"option\"\n                         class=\"btn btn-sm btn-primary btn-simple\"\n                         :class=\"{active: bigLineChart.activeIndex === index}\"\n                         :id=\"index\">\n                    <input type=\"radio\"\n                           @click=\"initBigChart(index)\"\n                           name=\"options\" autocomplete=\"off\"\n                           :checked=\"bigLineChart.activeIndex === index\">\n                    {{option}}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        ref=\"bigChart\"\n                        chart-id=\"big-line-chart\"\n                        :chart-data=\"bigLineChart.chartData\"\n                        :gradient-colors=\"bigLineChart.gradientColors\"\n                        :gradient-stops=\"bigLineChart.gradientStops\"\n                        :extra-options=\"bigLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n</template>\n\n<script>\n  import LineChart from '@/components/Charts/LineChart';\n  import BarChart from '@/components/Charts/BarChart';\n  import * as chartConfigs from '@/components/Charts/config';\n  import TaskList from './Dashboard/TaskList';\n  import UserTable from './Dashboard/UserTable';\n  import config from '@/config';\n\n  export default {\n    components: {\n      LineChart,\n      BarChart,\n      TaskList,\n      UserTable\n    },\n    data() {\n      return {\n        sonde : [\"028\", \"027\",\"030\",\"031\",\"032\"],\n        activeSonde : [\"028\",\"031\",\"032\"],\n        dataPossible : [{text:'Temperature'},\n            {text:'Hygrometry'},\n            {text:'Pressure'},\n            {text:'Rainfall'},\n            {text:'Brightness'},\n            {text:'Windvelocity max'},\n            {text:'Windvelocity min'},\n            {text:'Windvelocity avg'}\n        ],\n        activeData : 'Temperature',\n        windMode :\"min\",\n        bigLineChart: {\n          allData: [],\n          activeIndex: 0,\n          chartData: {\n            datasets: [{ }],\n            labels: [],\n          },\n          extraOptions: chartConfigs.purpleChartOptions,\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n          categories: []\n        },\n        greenLineChart: {\n          extraOptions: chartConfigs.greenChartOptions,\n          chartData: {\n            labels: [],\n            datasets: [{\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [],\n            }]\n          },\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n          gradientStops: [1, 0.4, 0],\n        },\n      }\n    },\n    computed: {\n      enableRTL() {\n        return this.$route.query.enableRTL;\n      },\n      isRTL() {\n        return this.$rtl.isRTL;\n      },\n      bigLineChartCategories() {\n        return this.$t('dashboard.chartCategories');\n      }\n    },\n    methods: {\n      changeData(event){\n        let data = event.originalTarget.innerText.split(' ');\n        this.activeData = data[0];\n        if (data.length == 2) {\n            this.windMode = data[1];\n        }\n        console.log(this.activeData);\n        this.initBigChart(this.activeIndex);\n      },\n      initBigChart(index) {\n          console.log(index);\n        let date = new Date();\n        if (index == 0){\n            date.setDate(date.getDate() - 1);\n            date = date.toISOString();\n        }\n        else if (index == 1){\n            date.setDate(date.getDate() - 7);\n            date = date.toISOString();\n        }\n        else {\n            date.setMonth(date.getMonth() - 1);\n            date = date.toISOString();\n        }\n        \n        let urls = [];\n        for (let i = 0; i < this.activeSonde.length; i++) {\n            urls.push(`http://piensg${this.activeSonde[i]}:8080/data/${this.activeData.toLowerCase()}/${date}`);\n        }\n        console.log(urls);\n\n        Promise.all(urls.map((u) => fetch(u)))\n        .then((responses) => Promise.all(responses.map((res) => res.json())))\n        .then((datas) => {\n            let chartData = {\n                datasets: [],\n                labels: [],\n                };\n                let count = 0;\n            datas.forEach(data => {\n                let dataValue = [];\n                if (this.activeData == 'Windvelocity') {\n                    data[this.activeData.toLowerCase()].value.forEach(element => \n                    {dataValue.push(element[this.windMode])});\n                    console.log(dataValue);\n                }\n                else{\n                    dataValue = data[this.activeData.toLowerCase()].value\n                }\n                let randomR = Math.random()*255;\n                let randomV = Math.random()*255;\n                let randomB = Math.random()*255;\n                chartData.datasets.push({\n                    label: this.activeSonde[count],\n                    fill: true,\n                    borderColor: `rgba(${randomR},${randomV},${randomB},1)`,\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: `rgba(${randomR},${randomV},${randomB},1)`,\n                    pointBorderColor: 'rgba(255,255,255,0)',\n                    pointHoverBackgroundColor: config.colors.primary,\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: dataValue\n                });\n                chartData.labels = data[this.activeData.toLowerCase()].date;\n                console.log(chartData.datasets[0].data);\n                this.$refs.bigChart.updateGradients(chartData);\n                this.bigLineChart.chartData = chartData;\n                count+=1;\n            })\n            \n        })\n        this.bigLineChart.activeIndex = index;\n      },\n    },\n    mounted() {\n      this.i18n = this.$i18n;\n      if (this.enableRTL) {\n        this.i18n.locale = 'ar';\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n    },\n    beforeDestroy() {\n      if (this.$rtl.isRTL) {\n        this.i18n.locale = 'en';\n        this.$rtl.disableRTL();\n      }\n    },\n  };\n</script>\n\n<style></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DashboardSondes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DashboardSondes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DashboardSondes.vue?vue&type=template&id=309989f2&\"\nimport script from \"./DashboardSondes.vue?vue&type=script&lang=js&\"\nexport * from \"./DashboardSondes.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}